---
export interface Props {
  id: string; // ID único del carrusel
  images: string[]; // URLs de las imágenes
}

const { id, images } = Astro.props;
---

<div id={id} class="relative w-full" data-carousel="static">
  <!-- Carousel wrapper -->
  <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
    {images.map((src, index) => (
      <div
        class={`hidden duration-700 ease-in-out ${index === 0 ? "block" : ""}`}
        data-carousel-item
      >
        <img
          src={src}
          class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2"
          alt={`Slide ${index + 1}`}
        />
      </div>
    ))}
  </div>

  <!-- Controls -->
  <button
    type="button"
    class="absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-prev
  >
    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 group-hover:bg-white/50">
      <svg
        class="w-6 h-6 text-white"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M5 1 1 5l4 4"
        />
      </svg>
    </span>
  </button>
  <button
    type="button"
    class="absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none"
    data-carousel-next
  >
    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 group-hover:bg-white/50">
      <svg
        class="w-6 h-6 text-white"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 6 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="m1 9 4-4-4-4"
        />
      </svg>
    </span>
  </button>
</div>

<script type="module">
  import { Carousel } from "flowbite";

  document.addEventListener("DOMContentLoaded", () => {
    // Seleccionamos el carrusel por su ID
    const carouselElement = document.getElementById("{id}");
    if (!carouselElement) {
      console.error(`El carrusel con ID "${id}" no se encontró en el DOM.`);
      return;
    }

    // Aseguramos que todos los elementos tengan el atributo "data-carousel-item"
    const items = carouselElement.querySelectorAll("[data-carousel-item]");
    if (items.length === 0) {
      console.error(`No se encontraron elementos con "data-carousel-item" en el carrusel con ID "${id}".`);
      return;
    }

    // Inicializamos el carrusel
    new Carousel(carouselElement, {
      interval: 3000, // Cambio automático cada 3 segundos
      indicators: false, // Sin indicadores
    });
  });
</script>








