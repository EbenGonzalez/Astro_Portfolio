<div id="animation-carousel" class="relative w-full" data-carousel="static">
  <!-- Carousel wrapper -->
  <div class="relative h-56 overflow-hidden rounded-lg md:h-96">
    <!-- Item 1 -->
    <div class="hidden duration-200 ease-linear" data-carousel-item>
      <img src="1.png" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
    </div>
    <!-- Item 2 -->
    <div class="hidden duration-200 ease-linear" data-carousel-item>
      <img src="2.png" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
    </div>
    <!-- Item 3 -->
    <div class="hidden duration-200 ease-linear" data-carousel-item="active">
      <img src="3.png" class="absolute block w-full -translate-x-1/2 -translate-y-1/2 top-1/2 left-1/2" alt="...">
    </div>
  </div>
  <!-- Slider controls -->
  <button type="button" class="absolute top-0 left-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-prev>
    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70">
      <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 1 1 5l4 4"/>
      </svg>
      <span class="sr-only">Previous</span>
    </span>
  </button>
  <button type="button" class="absolute top-0 right-0 z-30 flex items-center justify-center h-full px-4 cursor-pointer group focus:outline-none" data-carousel-next>
    <span class="inline-flex items-center justify-center w-10 h-10 rounded-full bg-white/30 dark:bg-gray-800/30 group-hover:bg-white/50 dark:group-hover:bg-gray-800/60 group-focus:ring-4 group-focus:ring-white dark:group-focus:ring-gray-800/70">
      <svg class="w-4 h-4 text-white dark:text-gray-800 rtl:rotate-180" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 6 10">
        <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m1 9 4-4-4-4"/>
      </svg>
      <span class="sr-only">Next</span>
    </span>
  </button>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const carouselItems = document.querySelectorAll("[data-carousel-item]");
    const prevButton = document.querySelector("[data-carousel-prev]");
    const nextButton = document.querySelector("[data-carousel-next]");
    let activeIndex = 0;
    const intervalTime = 3000; // Tiempo en milisegundos (5 segundos)

    // Función para mostrar el ítem activo
    const updateCarousel = () => {
      carouselItems.forEach((item, index) => {
        if (index === activeIndex) {
          item.classList.remove("hidden");
          item.setAttribute("data-carousel-item", "active");
        } else {
          item.classList.add("hidden");
          item.removeAttribute("data-carousel-item", "active");
        }
      });
    };

    // Evento para el botón "Next"
    nextButton.addEventListener("click", () => {
      activeIndex = (activeIndex + 1) % carouselItems.length; // Ciclo hacia adelante
      updateCarousel();
    });

    // Evento para el botón "Previous"
    prevButton.addEventListener("click", () => {
      activeIndex = (activeIndex - 1 + carouselItems.length) % carouselItems.length; // Ciclo hacia atrás
      updateCarousel();
    });

    // Configurar el deslizamiento automático
    const autoSlide = setInterval(() => {
      activeIndex = (activeIndex + 1) % carouselItems.length;
      updateCarousel();
    }, intervalTime);

    // Pausar el deslizamiento automático cuando el usuario interactúa con los botones
    prevButton.addEventListener("click", () => clearInterval(autoSlide));
    nextButton.addEventListener("click", () => clearInterval(autoSlide));

    // Inicializa el carrusel
    updateCarousel();
  });
</script>
